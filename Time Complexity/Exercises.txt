1.1  Suppose you have a sorted list of 128 names, and you’re searching 
through it using binary search. What’s the maximum number of 
steps it would take?

answer: It will take log₂(128) = 7 steps.

1.2   Suppose you double the size of the list. What’s the maximum 
number of steps now?

answer : it will take log₂ (2*128) =8 

1.3   You have a name, and you want to find the person’s phone number 
in the phone book. 

answer : 1- best scenario I will hit the first name O(1)
         2- worst scenario I will hit the last name O(n) linear search
         3- use binary search it will take O(log n) if the list it sorted

1.4   You have a phone number, and you want to find the person’s name 
in the phone book. (Hint: You’ll have to search through the whole 
book!)         

answer : it will take O(n)

1.5   You want to read the numbers of every person in the phone book.

answer : it wull take O(n)

1.6   You want to read the numbers of just the As. (This is a tricky one! 
It involves concepts that are covered more in chapter 4. Read the 
answer—you may be surprised!)

answer : it will take O(log n + k), where k is the number of people whose names start with 'A'.
         Suggestion: Use binary search to find the first 'A' (O(log n)), then scan through all the 'A's (O(k)).